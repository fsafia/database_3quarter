2. Подумать, какие операции являются транзакционными, и написать несколько примеров с транзакционными запросами.
Пример тарзакционной операции:
а)Смена начальника в отделе, Manager(emp_no = 111133) переводится на должность Staff, а Staff(emp_no = 10002) на должность Manager . 
1. изменить дату to_date = '2020-06-29' для текущей должности Manager в таблице titles
2. перевод Manager на должность  Staff с даты  to_date = '2020-06-29' до '9999-01-01'
3. изменить дату to_date = '2020-06-29' для текущей должности Staff в таблице titles
4. перевод Staff на должность  Manager с даты  to_date = '2020-06-29' до '9999-01-01'
5. заменила старого начальника на нового в таблице начальников - dept_manager

BEGIN;
UPDATE titles SET to_date = '2020-06-29' WHERE emp_no = 111133 AND to_date = '9999-01-01';//изменнена запись что должность начальника до 29 июня 2020 г.

INSERT INTO titles (emp_no,title,from_date,to_date) VALUES (111133, 'Staff', '2020-06-29', '9999-01-01');//запись что должность Staff с 29 июня 2020г. до '9999-01-01'

UPDATE titles SET to_date = '2020-06-29' WHERE emp_no = 10002 AND to_date = '9999-01-01';//изменнена запись что должность 'Staff' до 29 июня 2020 г.
INSERT INTO titles (emp_no,title,from_date,to_date) VALUES (10002, 'Manager', '2020-06-29', '9999-01-01');//запись что должность 'Manager' с 29 июня 2020г. до '9999-01-01'

UPDATE dept_manager SET emp_no = 10002,from_date = '2020-06-29', to_date = '9999-01-01' WHERE emp_no = 111133; //заменила старого начальника на нового в таблице начальников - dept_manager

COMMIT;

б) Увольнение человека (emp_no = 10007)
1. установить в трех таблицах (titles, dept_emp, salaries) дату увольнения to_date = '2020-06-29'

BEGIN;

UPDATE titles SET to_date = '2020-06-29' WHERE emp_no = 10007 AND to_date = '9999-01-01';

UPDATE dept_emp SET to_date = '2020-06-29' WHERE emp_no = 10007;

UPDATE salaries SET to_date = '2020-06-29' WHERE emp_no = 10007 AND to_date = '9999-01-01';

COMMIT;

-----------------------------------------------------------
-----------------------------------------------------------
3. Проанализировать несколько запросов с помощью EXPLAIN.

запрос req1.png хорошо оптимизирован, выбрано 100% информации из двух первых таблиц, и 33% из третьей таблицы.

запрос req2.png хорошо оптимизирован, выбрано 100% информации из 1,2 и 4 таблиц, и 10% из третьей таблицы. Если добавить индекс на колонку to_date таблицы salaries получаем 100% информации из всех 4 таблиц(3req.png).

ВОПРОС 
Как высчитывается key_len для всех таблиц одного запроса , например в req3.png ключи имеют значения 42,4,4,7байт. как определить весь индекс участвует в поиске или только часть?
В статье про индексы говорится:
"Если мы выполним изменим точное сравнение на поиск по диапазону, увидим что MySQL использует только часть индекса(age_gender):...
Это сигнал о том, что созданный индекс не подходит для этого запроса. Если же мы создадим правильный индекс(gender_age):...
В этом случае MySQL использует весь индекс gender_age, т.к. порядок колонок в нем позволяет сделать эту выборку..."



